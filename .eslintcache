[{"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\index.js":"1","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\App.js":"2","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\reportWebVitals.js":"3","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\window.js":"4","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\api.js":"5","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\constants\\colors.js":"6","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\date.js":"7","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\promise.js":"8","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\layout\\ShadowBox.js":"9","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Spinner.js":"10","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Img.js":"11","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\layout\\Grid.js":"12","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\forms\\Select.js":"13","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\presentations\\ThumbnailMain.js":"14","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\array.js":"15","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\constants\\mockData.js":"16","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\CSS.js":"17","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Pill.js":"18","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\constants\\styles.js":"19","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\strings.js":"20","C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Badge.js":"21"},{"size":504,"mtime":1607936038341,"results":"22","hashOfConfig":"23"},{"size":6737,"mtime":1607935719673,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1607935719697,"results":"25","hashOfConfig":"23"},{"size":546,"mtime":1607935719701,"results":"26","hashOfConfig":"23"},{"size":844,"mtime":1607935719697,"results":"27","hashOfConfig":"23"},{"size":1115,"mtime":1607935719693,"results":"28","hashOfConfig":"23"},{"size":902,"mtime":1607935719701,"results":"29","hashOfConfig":"23"},{"size":1802,"mtime":1607935719701,"results":"30","hashOfConfig":"23"},{"size":859,"mtime":1607935719689,"results":"31","hashOfConfig":"23"},{"size":2674,"mtime":1607935719685,"results":"32","hashOfConfig":"23"},{"size":816,"mtime":1607935719685,"results":"33","hashOfConfig":"23"},{"size":2291,"mtime":1607935719689,"results":"34","hashOfConfig":"23"},{"size":2323,"mtime":1607935719685,"results":"35","hashOfConfig":"23"},{"size":2419,"mtime":1607935719689,"results":"36","hashOfConfig":"23"},{"size":881,"mtime":1607935719697,"results":"37","hashOfConfig":"23"},{"size":23762,"mtime":1607935719693,"results":"38","hashOfConfig":"23"},{"size":753,"mtime":1607935719697,"results":"39","hashOfConfig":"23"},{"size":447,"mtime":1607935719685,"results":"40","hashOfConfig":"23"},{"size":772,"mtime":1607935719693,"results":"41","hashOfConfig":"23"},{"size":585,"mtime":1607935719701,"results":"42","hashOfConfig":"23"},{"size":1342,"mtime":1607935719681,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jp28bp",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\index.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\App.js",["88","89","90"],"import { Fragment, useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport Grid, {\r\n    GRID_ROW,\r\n    COL_1_OF_4,\r\n    COL_2_OF_4,\r\n} from './components/layout/Grid';\r\nimport Spinner from './components/common/Spinner';\r\nimport Img from './components/common/Img';\r\nimport ShadowBox from './components/layout/ShadowBox';\r\nimport ThumbnailMain from './components/presentations/ThumbnailMain';\r\nimport Select from './components/forms/Select';\r\nimport { GREY_B } from './constants/colors';\r\nimport { usePromise } from './utils/promise';\r\nimport { getAsciiFaces, MOCK_LOADING_TIME } from './utils/api';\r\nimport { scrolledToBottom } from './utils/window';\r\nimport { convertTimeToRelative } from './utils/date';\r\nimport adBannerA from './assets/images/banner-ad-a.jpg';\r\nimport adBannerB from './assets/images/banner-ad-b.jpg';\r\nimport adBannerC from './assets/images/banner-ad-c.jpg';\r\nimport adBannerD from './assets/images/banner-ad-d.jpg';\r\nimport adBannerE from './assets/images/banner-ad-e.jpg';\r\n\r\nconst useStyles = createUseStyles({\r\n    mainContainer: {\r\n        backgroundColor: GREY_B,\r\n        minHeight: '110vh',\r\n        width: '100%',\r\n        padding: '7rem 0',\r\n    },\r\n\r\n    endText: {\r\n        textAlign: 'center',\r\n        fontSize: '1.6rem',\r\n        margin: '6rem 0 0',\r\n    },\r\n});\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n\r\n    const [listItems, setListItems] = useState([]);\r\n    const [nextListItems, setNextListItems] = useState([]);\r\n    const [nextPage, setNextPage] = useState(1);\r\n    const [sortString, setSortString] = useState('title');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isDataFinished, setIsDataFinished] = useState(false);\r\n\r\n    const pageLimit = 16;\r\n    const adBannerList = [\r\n        adBannerA,\r\n        adBannerB,\r\n        adBannerC,\r\n        adBannerD,\r\n        adBannerE,\r\n    ];\r\n\r\n    const sortOptions = [\r\n        { value: 'title', displayValue: 'Title' },\r\n        { value: 'price', displayValue: 'Price' },\r\n        { value: 'id', displayValue: 'ID' },\r\n        { value: 'createdAt', displayValue: 'Date Created' },\r\n    ];\r\n\r\n    const asciiFaceRequest = usePromise({\r\n        promiseFunction: async () => {\r\n            const result = await getAsciiFaces(sortString, pageLimit, nextPage);\r\n            return result;\r\n        },\r\n    });\r\n\r\n    const getAsciiFacesRequest = (initialLoad) => {\r\n        setIsLoading(true);\r\n        asciiFaceRequest.call().then((data) => {\r\n            if (data.results.length === 0) {\r\n                setIsDataFinished(true);\r\n            } else {\r\n                setNextPage(data.nextPage);\r\n\r\n                initialLoad\r\n                    ? setListItems([...data.results])\r\n                    : setNextListItems([...data.results]);\r\n\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleScroll = async () => {\r\n        if (scrolledToBottom() && !isLoading && !isDataFinished) {\r\n            //first show saved items\r\n            setIsLoading(true);\r\n            setTimeout(async () => {\r\n                await setListItems([...listItems, ...nextListItems]);\r\n                await setIsLoading(false);\r\n                await setNextListItems([]);\r\n            }, MOCK_LOADING_TIME);\r\n        }\r\n    };\r\n\r\n    const getAdBannerName = () => {\r\n        let id;\r\n        while (true) {\r\n            id = Math.floor(Math.random() * 10) + 0;\r\n            if (adBannerList[adBannerList.length - 1] !== id) {\r\n                return id;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSort = (e) => {\r\n        setSortString(e.target.value);\r\n        setListItems([]);\r\n        setNextListItems([]);\r\n        setNextPage(1);\r\n        setIsDataFinished(false);\r\n    };\r\n\r\n    const fetchAsciiList = async (isInitial) => {\r\n        await getAsciiFacesRequest(isInitial);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAsciiList(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchAsciiList(false);\r\n    }, [listItems]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return function cleanup() {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchAsciiList(true);\r\n    }, [sortString]);\r\n\r\n    const renderAsciiFaces = () => {\r\n        var asciiFacesOutput = [];\r\n        let adsBannerCount = 0;\r\n        let adsBannerTotal = 0;\r\n\r\n        listItems.forEach(\r\n            ({ asciiFace, title, id, badgeColor, createdAt, price }) => {\r\n                adsBannerCount++;\r\n                asciiFacesOutput.push(\r\n                    <Grid variety={COL_1_OF_4}>\r\n                        <ShadowBox isLinked>\r\n                            <ThumbnailMain\r\n                                asciiFace={asciiFace}\r\n                                title={title}\r\n                                description={`ID: ${id}`}\r\n                                badgeColor={badgeColor}\r\n                                badgeIcon=\"$\"\r\n                                pillContent={convertTimeToRelative(createdAt)}\r\n                                badgeContent={price}\r\n                            />\r\n                        </ShadowBox>\r\n                    </Grid>\r\n                );\r\n\r\n                if (adsBannerCount % 20 === 0) {\r\n                    let adName;\r\n                    if (adBannerList[adsBannerTotal] !== undefined) {\r\n                        adName = adBannerList[adsBannerTotal];\r\n                    } else {\r\n                        adName = getAdBannerName();\r\n                        adBannerList[adsBannerTotal] = adName;\r\n                    }\r\n\r\n                    asciiFacesOutput.push(\r\n                        <div key={adsBannerCount}>\r\n                            <Img src={adName} width=\"90%\" />\r\n                        </div>\r\n                    );\r\n                    adsBannerTotal++;\r\n                }\r\n            }\r\n        );\r\n\r\n        return asciiFacesOutput;\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mainContainer}>\r\n            <Grid variety={GRID_ROW}>\r\n                <Grid variety={COL_2_OF_4}>\r\n                    <Select options={sortOptions} onChange={handleSort} />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid variety={GRID_ROW}>\r\n                <Fragment>{renderAsciiFaces()}</Fragment>\r\n            </Grid>\r\n\r\n            <Grid variety={GRID_ROW}>\r\n                {isLoading && !isDataFinished && <Spinner />}\r\n                {isDataFinished && (\r\n                    <p className={classes.endText}>~ end of catalogue ~</p>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n",["91","92"],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\reportWebVitals.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\window.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\api.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\constants\\colors.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\date.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\promise.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\layout\\ShadowBox.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Spinner.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Img.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\layout\\Grid.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\forms\\Select.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\presentations\\ThumbnailMain.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\array.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\constants\\mockData.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\CSS.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Pill.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\constants\\styles.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\utils\\strings.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\sample\\e-commerce\\src\\components\\common\\Badge.js",[],{"ruleId":"93","severity":1,"message":"94","line":125,"column":8,"nodeType":"95","endLine":125,"endColumn":10,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"94","line":129,"column":8,"nodeType":"95","endLine":129,"endColumn":19,"suggestions":"97"},{"ruleId":"93","severity":1,"message":"94","line":141,"column":8,"nodeType":"95","endLine":141,"endColumn":20,"suggestions":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAsciiList'. Either include it or remove the dependency array.","ArrayExpression",["103"],["104"],["105"],"no-native-reassign",["106"],"no-negated-in-lhs",["107"],{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchAsciiList]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchAsciiList, listItems]",{"range":"116","text":"117"},"Update the dependencies array to be: [fetchAsciiList, sortString]",{"range":"118","text":"119"},[3948,3950],"[fetchAsciiList]",[4018,4029],"[fetchAsciiList, listItems]",[4304,4316],"[fetchAsciiList, sortString]"]