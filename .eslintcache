[{"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\index.js":"1","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\reportWebVitals.js":"2","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\App.js":"3","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\constants\\colors.js":"4","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\promise.js":"5","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\api.js":"6","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\layout\\Grid.js":"7","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\layout\\ShadowBox.js":"8","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\common\\Spinner.js":"9","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\presentations\\ThumbnailMain.js":"10","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\forms\\Select.js":"11","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\constants\\mockData.js":"12","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\array.js":"13","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\constants\\styles.js":"14","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\strings.js":"15","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\common\\Pill.js":"16","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\common\\Badge.js":"17","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\CSS.js":"18","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\css.js":"19"},{"size":504,"mtime":1607811468108,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1607811468112,"results":"22","hashOfConfig":"21"},{"size":6761,"mtime":1607817401009,"results":"23","hashOfConfig":"21"},{"size":1115,"mtime":1607811468104,"results":"24","hashOfConfig":"21"},{"size":1801,"mtime":1607811468116,"results":"25","hashOfConfig":"21"},{"size":776,"mtime":1607814140626,"results":"26","hashOfConfig":"21"},{"size":2234,"mtime":1607811589677,"results":"27","hashOfConfig":"21"},{"size":859,"mtime":1607811468100,"results":"28","hashOfConfig":"21"},{"size":2675,"mtime":1607811468096,"results":"29","hashOfConfig":"21"},{"size":2374,"mtime":1607811468104,"results":"30","hashOfConfig":"21"},{"size":2323,"mtime":1607811594405,"results":"31","hashOfConfig":"21"},{"size":23496,"mtime":1607811468108,"results":"32","hashOfConfig":"21"},{"size":355,"mtime":1607811468116,"results":"33","hashOfConfig":"21"},{"size":772,"mtime":1607811468108,"results":"34","hashOfConfig":"21"},{"size":565,"mtime":1607811468116,"results":"35","hashOfConfig":"21"},{"size":447,"mtime":1607811468092,"results":"36","hashOfConfig":"21"},{"size":1342,"mtime":1607811468092,"results":"37","hashOfConfig":"21"},{"size":753,"mtime":1607811576734,"results":"38","hashOfConfig":"21"},{"size":753,"mtime":1607811576734,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18f4iz9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\index.js",[],["81","82"],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\reportWebVitals.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\App.js",["83","84","85","86"],"import { Fragment, useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport Grid, {\r\n    GRID_ROW,\r\n    COL_1_OF_4,\r\n    COL_2_OF_4,\r\n} from './components/layout/Grid';\r\nimport { GREY_B } from './constants/colors';\r\nimport ShadowBox from './components/layout/ShadowBox';\r\nimport ThumbnailMain from './components/presentations/ThumbnailMain';\r\nimport { usePromise } from './utils/promise';\r\nimport Select from './components/forms/Select';\r\nimport { getAsciiFaces } from './utils/api';\r\nimport Spinner from './components/common/Spinner';\r\n\r\nconst useStyles = createUseStyles({\r\n    mainContainer: {\r\n        backgroundColor: GREY_B,\r\n        minHeight: '110vh',\r\n        width: '100%',\r\n        padding: '7rem 0',\r\n    },\r\n});\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    const [listItems, setListItems] = useState([]);\r\n    const [nextListItems, setNextListItems] = useState([]);\r\n    const [nextPage, setNextPage] = useState(1);\r\n    const [sortString, setSortString] = useState('title');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isShownAll, setIsShownAll] = useState(false);\r\n    const [isDataFinished, setIsDataFinished] = useState(false);\r\n    const pageLimit = 20;\r\n\r\n    const sortOptions = [\r\n        { value: 'title', displayValue: 'Title' },\r\n        { value: 'badgeContent', displayValue: 'Badge Content / Price' },\r\n        { value: 'id', displayValue: 'ID' },\r\n    ];\r\n\r\n    const asciiFaceRequest = usePromise({\r\n        promiseFunction: async () => {\r\n            const result = await getAsciiFaces(sortString, pageLimit, nextPage);\r\n            return result;\r\n        },\r\n    });\r\n\r\n    const getAsciiFacesRequest = (initialLoad) => {\r\n        asciiFaceRequest.call().then((data) => {\r\n            if (data.results.length === 0) {\r\n                setIsDataFinished(true);\r\n            } else {\r\n                setNextPage(nextPage + 1);\r\n                if (initialLoad) {\r\n\t\t\t\t\tsetListItems(data.results);\r\n\t\t\t\t\tsetIsLoading(false);\r\n                } else {\r\n                    setNextListItems(data.results);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleScroll = async () => {\r\n        const scrollTop =\r\n            (document.documentElement && document.documentElement.scrollTop) ||\r\n            document.body.scrollTop;\r\n        const scrollHeight =\r\n            (document.documentElement &&\r\n                document.documentElement.scrollHeight) ||\r\n            document.body.scrollHeight;\r\n        const clientHeight =\r\n            document.documentElement.clientHeight || window.innerHeight;\r\n        const scrolledToBottom =\r\n            Math.ceil(scrollTop + clientHeight) >= scrollHeight;\r\n\r\n        if (scrolledToBottom && !isLoading && !isShownAll) {\r\n            //first show saved items\r\n            setListItems([...listItems, ...nextListItems]);\r\n            setNextListItems([]);\r\n            setIsLoading(true);\r\n\r\n            if (!isDataFinished) {\r\n                //then fetch new items and save it into preItems state\r\n                await getAsciiFacesRequest(false);\r\n                setIsLoading(false);\r\n            } else {\r\n                //show end message & disable on scroll\r\n                setIsLoading(false);\r\n                setIsShownAll(true);\r\n            }\r\n\r\n\t\t\tconsole.log(listItems, nextListItems);\r\n\t\t}\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        getAsciiFacesRequest(true);\r\n        getAsciiFacesRequest(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getAsciiFacesRequest(true);\r\n    }, [sortString]);\r\n\r\n    // const asciiFaceList =\r\n    //     listItems.length > 0 &&\r\n    //     listItems.map((item) => (\r\n    //         <Grid variety={COL_1_OF_4}>\r\n    //             <ShadowBox isLinked>\r\n    //                 <ThumbnailMain\r\n    //                     asciiFace={item.asciiFace}\r\n    //                     title={item.title}\r\n    //                     description={item.description}\r\n    //                     badgeColor={item.badgeColor}\r\n    //                     badgeIcon=\"$\"\r\n    //                     pillContent={item.pillContent}\r\n    //                     badgeContent={item.badgeContent}\r\n    //                 />\r\n    //             </ShadowBox>\r\n    //         </Grid>\r\n    //     ));\r\n\r\n    const showItems = () => {\r\n        var renderOutPut = [];\r\n\r\n        let itemCount = 0;\r\n        let adsCount = 0;\r\n        for (const item of listItems) {\r\n            itemCount++;\r\n            renderOutPut.push(\r\n                <Grid variety={COL_1_OF_4}>\r\n                    <ShadowBox isLinked>\r\n                        <ThumbnailMain\r\n                            asciiFace={item.asciiFace}\r\n                            title={item.title}\r\n                            description={item.description}\r\n                            badgeColor={item.badgeColor}\r\n                            badgeIcon=\"$\"\r\n                            pillContent={item.pillContent}\r\n                            badgeContent={item.badgeContent}\r\n                        />\r\n                    </ShadowBox>\r\n                </Grid>\r\n            );\r\n\r\n            //   if (itemCount % 20 === 0) {\r\n            // \t//check add id is exists or not in db\r\n            // \tlet adId;\r\n            // \tif (this.adsDB[adsCount] !== undefined) {\r\n            // \t  adId = this.adsDB[adsCount];\r\n            // \t} else {\r\n            // \t  adId = this.getAdId();\r\n            // \t  this.adsDB[adsCount] = adId;\r\n            // \t}\r\n            // \tadId = `/ads/?r=${adId}`;\r\n            // \trenderOutPut.push(\r\n            // \t  <div\r\n            // \t\tclassName=\"AdOuter\"\r\n            // \t\tkey={\"adfor\" + itemCount}\r\n            // \t\tid={\"adfor\" + itemCount}\r\n            // \t  >\r\n            // \t\t<img className=\"ad\" src={adId} />\r\n            // \t  </div>\r\n            // \t);\r\n            // \tadsCount++;\r\n            //   }\r\n        }\r\n\r\n        return renderOutPut;\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mainContainer}>\r\n            <Grid variety={GRID_ROW}>\r\n                <Grid variety={COL_2_OF_4}>\r\n                    <Select\r\n                        options={sortOptions}\r\n                        onChange={(e) => setSortString(e.target.value)}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid variety={GRID_ROW}>\r\n                {isLoading ? (\r\n                    <Spinner />\r\n                ) : (\r\n                    <Fragment>{showItems()}</Fragment>\r\n                )}\r\n                {isLoading && <p>Loading...</p>}\r\n                {isShownAll && <p>~ end of catalogue ~</p>}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\constants\\colors.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\promise.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\api.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\layout\\Grid.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\layout\\ShadowBox.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\common\\Spinner.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\presentations\\ThumbnailMain.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\forms\\Select.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\constants\\mockData.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\array.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\constants\\styles.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\strings.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\common\\Pill.js",[],["87","88"],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\components\\common\\Badge.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\CSS.js",[],"C:\\Users\\Mark\\Desktop\\react-projects\\e-commerce\\src\\utils\\css.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":103,"column":8,"nodeType":"95","endLine":103,"endColumn":10,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":107,"column":8,"nodeType":"95","endLine":107,"endColumn":20,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":131,"column":13,"nodeType":"101","messageId":"102","endLine":131,"endColumn":21},{"ruleId":"99","severity":1,"message":"103","line":133,"column":13,"nodeType":"101","messageId":"102","endLine":133,"endColumn":22},{"ruleId":"89","replacedBy":"104"},{"ruleId":"91","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAsciiFacesRequest' and 'handleScroll'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'getAsciiFacesRequest'. Either include it or remove the dependency array.",["109"],"no-unused-vars","'adsCount' is assigned a value but never used.","Identifier","unusedVar","'itemCount' is assigned a value but never used.",["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [getAsciiFacesRequest, handleScroll]",{"range":"114","text":"115"},"Update the dependencies array to be: [getAsciiFacesRequest, sortString]",{"range":"116","text":"117"},[3548,3550],"[getAsciiFacesRequest, handleScroll]",[3623,3635],"[getAsciiFacesRequest, sortString]"]